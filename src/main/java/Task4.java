public class Task4 {
    /**Даны два целых числа x и n, напишите функцию для вычисления x^n
     решение 1 - рекурсивно O(n)
     решение 2 - улучшить решение 1 до O(lon n)*/


    public static void main(String[] args) {
        int x = 5;
        int n = 7;
        System.out.println(powerRecursive(x, n));
        System.out.println(power(x, n));
    }
//решение из интренета. Попыталась разобраться. Но с рекурсией беда совсем. не понимаю её.
    // Решение 1
    public static int powerRecursive(int x, int n) {//рекурсивная функция возведения числа в степень.
        if (n == 0) {//Если степень равна 0, функция возвратит 1
            return 1;
        }
        return x * powerRecursive(x, n - 1);//В противном случае функция
        // рекурсивно вызовет себя, уменьшив степень
        //на 1, и перемножит результат с переданным числом.
    }

    // Решение 2
    public static int power(int x, int n) {
        if (n == 0) {//Если степень равна 0, то функция возвратит 1
            return 1;
        }
        int p = power(x, n / 2);        //В противном случае функция
                                             //будет рекурсивно вызывать себя, уменьшая степень в два раза каждый раз и
        p *= p;                          //сохраняя результат.

        if (n % 2 == 1) {//Затем он проверяет, четное ли значение уменьшенной степени,
            // и в случае необходимости перемножает результат с переданным числом.
            p *= x;
        }
        return p;
    }
}
